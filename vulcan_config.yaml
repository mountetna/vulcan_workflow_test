- display: "Poems__First Poem"
  ui_component: "string"
  doc: "text of the first poem"
  default: "hello hello!"
  output:
    params: ["poem"]

- display: "Poems__Second Poem"
  ui_component: "string"
  doc: "text of the second poem"
  output:
    params: ["poem_2"]

- display: "Set plot options"
  ui_component: "any-dittoseq"
  doc: "Options here determine both what type of plot to make, and how to set that plot up. For addtional details on individual inputs, see the 'Inputs of the Plot Configuration Interface' section of Vulcan's 'Help'-page documentation OR dittoSeq's own documentation. Any inputs without an exact label match within that Vulcan 'Help'-page table will map directly to some dittoSeq input for the function with the same name as your chosen plot type. You can find dittoSeq's documentation from either within R itself, run `?dittoSeq::<visualization-name>`, or from the RDRR.io page that pops up when you google the package."
  input:
    files:
      data_frame: "discrete_metadata_summary.json"
      continuous_opts: "continuous_opts.json"
      discrete_opts: "discrete_opts.json"
      all_opts: "all_opts.json"
      reduction_opts: "reduction_opts.json"
  output:
    files: [ plot_setup.json ]

- display: "count selector to perform on files"
  name: "ui_count_method"
  ui_component: "dropdown"
  doc: "Select what to count"
  default: "chars"
  input:
    files: ["method_options.txt"]
  output:
    files: ["count_method.txt"]

- display: "Count from First Poem"
  ui_component: "raw"
  input:
    files: ["count_poem.txt"]

- display: "Count from Second Poem"
  ui_component: "raw"
  input:
    files: ["count_poem_2.txt"]

- display: "Download First Poem Count"
  ui_component: "link"
  input:
    files: ["count_poem_2.txt"]
